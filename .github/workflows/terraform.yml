name: terraform-automation

on: 
  push:
    branches:
      - main
      - icrisat007-dev1
    paths:
    - 'examples/**'

  pull_request:

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./examples


    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        continue-on-error: true
        run: terraform plan -out "tf_plan" -input=false

      - name: Upload TF Plan
        uses: actions/upload-artifact@v2
        with:
          name: tf_plan
          path: ./examples/tf_plan
          if-no-files-found: error
          retention-days: 1

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform_plan
    environment:
      name: tf_apply

    steps: 
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup GCP Service Account
      uses: google-github-actions/setup-gcloud@master
      with:
        version: 'latest'
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Download TF Plan
      uses: actions/download-artifact@v2
      with:
        name: tf_plan
        path: ./CI_CD/examples

    # Provision resources via Terraform        
    - name: Terraform Apply
      run: terraform apply "tf_plan"
